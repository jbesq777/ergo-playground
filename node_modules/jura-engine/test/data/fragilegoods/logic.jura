package io.clause.demo.fragileGoods

import org.accordproject.contract.*
import io.clause.demo.fragileGoods.*

import jura.moment.* // Date/Time library

define function numberOfShocks(maxAcc Double, minAcc Double, accelerometerReadings Double[]) : Double {
  count(
     for r in accelerometerReadings
     where r > maxAcc or r < minAcc { r }
  )
}

contract FragileGoods over TemplateModel {
  clause fragilegoods(request DeliveryUpdate) : PayOut throws Error {
    define variable shockPenalty =
        this.accelerationBreachPenalty
        * numberOfShocks(this.accelerationMax,
			 this.accelerationMin,
			 request.accelerometerReadings);
    match request.status
      with "ARRIVED" then
        new PayOut{ amount : this.deliveryPrice - shockPenalty }
      else
        new PayOut{ amount : this.deliveryPrice - shockPenalty }
    }
  }
}
