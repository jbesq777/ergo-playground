// Imports CTO files
import org.accordproject.contract.*
import org.accordproject.latedeliveryandpenalty.*

/* From template:
Late Delivery and Penalty. In case of delayed delivery[{" except for Force Majeure cases,":? forceMajeure}] the Seller shall pay to the Buyer for every [{penaltyDuration}] of delay penalty amounting to [{penaltyPercentage}]% of the total value of the Equipment whose delivery has been delayed. Any fractional part of a [{fractionalPart}] is to be considered a full [{fractionalPart}]. The total amount of penalty shall not however, exceed [{capPercentage}]% of the total value of the Equipment involved in late delivery. If the delay is more than [{termination}], the Buyer is entitled to terminate this Contract.
 */

// Declare a contract over a template model
contract LateDeliveryAndPenalty over TemplateModel {
    // Defines a function to calculate the penalty
   definition calculatePenalty(diff float, goodsValue float) float {
      // penalty formula
      const penalty = (diff / penaltyDuration.amount) * penaltyPercentage/100 * goodsValue;
      
      // penalty may be capped
      if penalty > capPercentage/100 * goodsValue {
         return capPercentage/100 * goodsValue
      } else {
         return penalty
      }
   }

   // Clause for volume discount
   clause latedeliveryandpenalty(req LateDeliveryAndPenaltyRequest) LateDeliveryAndPenaltyResponse {

   const agreed = req.agreedDelivery;

   // First check if the clause applies
   if !moment.isAfter(moment.now(),agreed) {
     error Error{ "This clause does not apply" }
   } else if forceMajeure && req.forceMajeure { // Second check if forceMajeure is and can be claimed
     return LateDeliveryAndPenaltyResponse{ 0, true }
   } else { // If not, calculate the penalty and whether the contract can be terminated
     // difference between current date and agreed upon date
     const diff = moment.diff(moment.now(),agreed,penaltyDuration.unit);
     // Calls the function to calculate penalty
     const penalty = calculatePenalty(diff,req.goodsValue);
     // Return the response with the penalty and termination determination
     return LateDeliveryAndPenaltyResponse{ capped, diff > termination }
   }
}
